name: Python Checks

on:
  workflow_call:
    inputs:
      black_folder:
        required: true
        type: string
    secrets:
      ssh_private_key:
        required: true

env:
  POETRY_HOME: /opt/poetry

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.ssh_private_key }}

      - name: Set up python
        id: setup-python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v3
        with:
          path: $POETRY_HOME
          key: check-poetry

      - name: Install and configure Poetry
        if: steps.cached-poetry.outputs.cache-hit != 'true'
        run: |
          python3 -m venv $POETRY_HOME
          $POETRY_HOME/bin/pip install poetry
          $POETRY_HOME/bin/poetry --version

      - name: Load cached venv
        id: cached-venv
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
          restore-keys: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-

      - name: Install dependencies
        if: steps.cached-venv.outputs.cache-hit != 'true'
        run: |
          $POETRY_HOME/bin/poetry install --no-interaction --no-root --with=dev

      - name: Check syntax
        run: $POETRY_HOME/bin/poetry run black ${{ inputs.black_folder }} --check

      - name: Check typing
        run : $POETRY_HOME/bin/poetry run pyright

      - name: Run tests
        run: $POETRY_HOME/bin/poetry run `pytest